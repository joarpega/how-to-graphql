### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""Model Auth payload"""
type AuthPayload {
  """JWT token"""
  token: String

  """User data"""
  user: User
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Feed type use as return type of the feed query"""
type Feed {
  """
  Is an integer that will mention number of links available in the database that match
  """
  count: Int!

  """Array of link type objects"""
  links: [Link!]!
}

"""Model link"""
type Link {
  """Create at"""
  createdAt: DateTime!

  """Description link"""
  description: String!

  """Id link"""
  id: Int!

  """Posted By"""
  postedBy: User

  """Url link"""
  url: String!
  voters: [User!]!
}

"""Input to element sorting, acording to specific criterial"""
input LinkOrderByInput {
  """Created at"""
  createdAt: Sort

  """Sort option by description field [asc/desc]"""
  description: Sort

  """Sort option by url field [asc/desc]"""
  url: Sort
}

type Mutation {
  deleteLink(id: Int!): Link

  """Login method - obtains jwt for use in next request"""
  login(
    """Unique email"""
    email: String!

    """User password"""
    password: String!
  ): AuthPayload!
  post(description: String!, url: String!): Link!
  singup(
    """Unique email"""
    email: String!

    """User name"""
    name: String!

    """User password"""
    password: String!
  ): AuthPayload!
  updateLink(description: String!, id: Int!, url: String!): Link

  """Create vote"""
  vote(linkId: Int!): Vote
}

type Query {
  """Links type"""
  feed(
    """Serarch string on fields URL or Description"""
    filter: String

    """
    Represent the criterial by wich that the list of Link elements can be sorted
    """
    orderBy: [LinkOrderByInput!]

    """Offset pagination use"""
    skip: Int

    """Select a limit range and return records"""
    take: Int
  ): Feed!
  link(id: Int!): Link
}

enum Sort {
  asc
  desc
}

"""User model"""
type User {
  email: String!
  id: Int!

  """List links"""
  links: [Link!]!
  name: String!
  votes: [Link!]!
}

"""Vote model"""
type Vote {
  """Link id"""
  link: Link!

  """User id"""
  user: User!
}
